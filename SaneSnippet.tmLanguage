<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>sane-snippet</string>
	</array>
	<key>name</key>
	<string>SaneSnippet</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>begin</key>
			<string>^(---)$</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.embedded.begin.sanesnippet.frontmatter</string>
				</dict>
			</dict>
			<key>end</key>
			<string>^___UGLY HACK TO PREVENT SANESNIPPET FRONTMATTER FROM ENDING EARLY___$</string>
			<key>name</key>
			<string>source.sanesnippet.frontmatter</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.sanesnippet.frontmatter</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.key-value</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>string.unquoted.sanesnippet.frontmatter</string>
						</dict>
					</dict>
					<key>match</key>
					<string>^(description|tabTrigger|scope|uuid|name)\s*(:)\s*(.*?)\s*$</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>^(---)$</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.end.sanesnippet.frontmatter</string>
						</dict>
					</dict>
					<key>end</key>
					<string>^___UGLY HACK TO PREVENT SANESNIPPET CONTENT FROM ENDING EARLY___$</string>
					<key>name</key>
					<string>source.sanesnippet.content</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\(\\|\$|`)</string>
							<key>name</key>
							<string>constant.character.escape.snippet.sanesnippet</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.snippet.sanesnippet</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>keyword.tabstop.snippet.sanesnippet</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(\$)(\d+)</string>
							<key>name</key>
							<string>meta.structure.tabstop.snippet.sanesnippet</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(\$\{)(\d+)(:)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.snippet.sanesnippet</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>keyword.tabstop.snippet.sanesnippet</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.snippet.sanesnippet</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\}</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.snippet.sanesnippet</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.structure.tabstop.snippet.sanesnippet</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>$self</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(\$\{)(\d+)(/)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.snippet.sanesnippet</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>keyword.tabstop.snippet.sanesnippet</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.snippet.sanesnippet</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>string.regexp</string>
							<key>end</key>
							<string>\}</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.snippet.sanesnippet</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.structure.tabstop.snippet.sanesnippet</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#escaped_char</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#substitution</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.snippet.sanesnippet</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>string.env.snippet.sanesnippet</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(\$)([a-zA-Z_][a-zA-Z0-9_]*)</string>
							<key>name</key>
							<string>meta.structure.variable.snippet.sanesnippet</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(\$\{)([a-zA-Z_][a-zA-Z0-9_]*)(:)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.snippet.sanesnippet</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>string.env.snippet.sanesnippet</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.snippet.sanesnippet</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\}</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.snippet.sanesnippet</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.structure.variable.snippet.sanesnippet</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>$self</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(\$\{)([a-zA-Z_][a-zA-Z0-9_]*)(/)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.snippet.sanesnippet</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>string.env.snippet.sanesnippet</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.snippet.sanesnippet</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>string.regexp</string>
							<key>end</key>
							<string>\}</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>entity.name.function.snippet.sanesnippet</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.structure.substitution.snippet.sanesnippet</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#escaped_char</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#substitution</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>`</string>
							<key>end</key>
							<string>`</string>
							<key>name</key>
							<string>string.interpolated.shell.snippet.sanesnippet</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>condition</key>
		<dict>
			<key>begin</key>
			<string>\(\?\d:</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>string.regexp.condition</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>string.regexp.condition</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.structure.condition.regexp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#replacements</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>:</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>string.regexp.condition</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=\))</string>
					<key>name</key>
					<string>meta.structure.condition.regexp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#replacements</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>escaped_char</key>
		<dict>
			<key>match</key>
			<string>\\[/\\]</string>
			<key>name</key>
			<string>constant.character.escape.regex</string>
		</dict>
		<key>replacements</key>
		<dict>
			<key>match</key>
			<string>\$\d|\\[uUILE]</string>
			<key>name</key>
			<string>string.regexp.replacement</string>
		</dict>
		<key>substitution</key>
		<dict>
			<key>begin</key>
			<string>/</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.snippet.sanesnippet</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>text.substitution</string>
			<key>end</key>
			<string>/[mg]?</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.snippet.sanesnippet</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#escaped_char</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#replacements</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#condition</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.sanesnippet</string>
	<key>uuid</key>
	<string>9208D3C1-F9FF-4083-B8BD-57F1E7EA72AB</string>
</dict>
</plist>
